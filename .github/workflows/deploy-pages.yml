name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Generate Firebase Config
        run: |
          cat > firebase-config.public.js << EOF
          // Configuração pública para front-end (GitHub Pages)
          // Gerado automaticamente durante o deploy
          // Este arquivo foi gerado pelo GitHub Actions com os valores reais dos secrets

          // Configurações Firebase (injetadas via GitHub Secrets)
          window.FIREBASE_API_KEY = "${{ secrets.FIREBASE_API_KEY }}";
          window.FIREBASE_AUTH_DOMAIN = "${{ secrets.FIREBASE_AUTH_DOMAIN }}";
          window.FIREBASE_PROJECT_ID = "${{ secrets.FIREBASE_PROJECT_ID }}";
          window.FIREBASE_STORAGE_BUCKET = "${{ secrets.FIREBASE_STORAGE_BUCKET }}";
          window.FIREBASE_MESSAGING_SENDER_ID = "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}";
          window.FIREBASE_APP_ID = "${{ secrets.FIREBASE_APP_ID }}";

          // Credenciais de autenticação Firebase (injetadas via GitHub Secrets)
          window.FIREBASE_AUTH_EMAIL = "${{ secrets.FIREBASE_AUTH_EMAIL }}";
          window.FIREBASE_AUTH_PASSWORD = "${{ secrets.FIREBASE_AUTH_PASSWORD }}";
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
